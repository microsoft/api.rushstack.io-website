"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[63607],{50158:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(46393);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?m(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,m=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(a),g=r,u=c["".concat(l,".").concat(g)]||c[g]||s[g]||m;return a?n.createElement(u,i(i({ref:t},p),{},{components:a})):n.createElement(u,i({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var m=a.length,i=new Array(m);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<m;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},52256:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(20216),r=a(46393),m=a(50158);const i={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},o=void 0,l={unversionedId:"pages/ts-command-line",id:"pages/ts-command-line",title:"ts-command-line",description:"Home &gt; @rushstack/ts-command-line",source:"@site/docs/pages/ts-command-line.md",sourceDirName:"pages",slug:"/pages/ts-command-line",permalink:"/pages/ts-command-line",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},d={},p=[{value:"ts-command-line package",id:"ts-command-line-package",level:2},{value:"Classes",id:"classes",level:2},{value:"Abstract Classes",id:"abstract-classes",level:2},{value:"Enumerations",id:"enumerations",level:2},{value:"Interfaces",id:"interfaces",level:2}],s={toc:p};function c(e){let{components:t,...a}=e;return(0,m.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("p",null,(0,m.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,m.kt)("a",{parentName:"p",href:"/pages/ts-command-line"},"@rushstack/ts-command-line")),(0,m.kt)("h2",{id:"ts-command-line-package"},"ts-command-line package"),(0,m.kt)("p",null,"An object-oriented command-line parser for TypeScript projects."),(0,m.kt)("h2",{id:"classes"},"Classes"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Class"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlinechoicelistparameter"},"CommandLineChoiceListParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definechoicelistparameter"},"CommandLineParameterProvider.defineChoiceListParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlinechoiceparameter"},"CommandLineChoiceParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definechoiceparameter"},"CommandLineParameterProvider.defineChoiceParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineflagparameter"},"CommandLineFlagParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineflagparameter"},"CommandLineParameterProvider.defineFlagParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlinehelper"},"CommandLineHelper")),(0,m.kt)("td",{parentName:"tr",align:null},"Helpers for working with the ts-command-line API.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineintegerlistparameter"},"CommandLineIntegerListParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineintegerlistparameter"},"CommandLineParameterProvider.defineIntegerListParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineintegerparameter"},"CommandLineIntegerParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineintegerparameter"},"CommandLineParameterProvider.defineIntegerParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineremainder"},"CommandLineRemainder")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definecommandlineremainder"},"CommandLineParameterProvider.defineCommandLineRemainder()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlinestringlistparameter"},"CommandLineStringListParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definestringlistparameter"},"CommandLineParameterProvider.defineStringListParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlinestringparameter"},"CommandLineStringParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The data type returned by ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definestringparameter"},"CommandLineParameterProvider.defineStringParameter()"),(0,m.kt)(r.Fragment,null),".")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.dynamiccommandlineaction"},"DynamicCommandLineAction")),(0,m.kt)("td",{parentName:"tr",align:null})),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.dynamiccommandlineparser"},"DynamicCommandLineParser")),(0,m.kt)("td",{parentName:"tr",align:null})))),(0,m.kt)("h2",{id:"abstract-classes"},"Abstract Classes"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Abstract Class"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineaction"},"CommandLineAction")),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("p",null,"Represents a sub-command that is part of the CommandLineParser command line. Applications should create subclasses of CommandLineAction corresponding to each action that they want to expose."),(0,m.kt)("p",null,'The action name should be comprised of lower case words separated by hyphens or colons. The name should include an English verb (e.g. "deploy"). Use a hyphen to separate words (e.g. "upload-docs"). A group of related commands can be prefixed with a colon (e.g. "docs:generate", "docs:deploy", "docs:serve", etc).'))),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameter"},"CommandLineParameter")),(0,m.kt)("td",{parentName:"tr",align:null},"The base class for the various command-line parameter types.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider"},"CommandLineParameterProvider")),(0,m.kt)("td",{parentName:"tr",align:null},"This is the common base class for CommandLineAction and CommandLineParser that provides functionality for defining command-line parameters.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterwithargument"},"CommandLineParameterWithArgument")),(0,m.kt)("td",{parentName:"tr",align:null},"The common base class for parameters types that receive an argument.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparser"},"CommandLineParser")),(0,m.kt)("td",{parentName:"tr",align:null},'The "argparse" library is a relatively advanced command-line parser with features such as word-wrapping and intelligible error messages (that are lacking in other similar libraries such as commander, yargs, and nomnom). Unfortunately, its ruby-inspired API is awkward to use. The abstract base classes CommandLineParser and CommandLineAction provide a wrapper for "argparse" that makes defining and consuming arguments quick and simple, and enforces that appropriate documentation is provided for each parameter.')),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.scopedcommandlineaction"},"ScopedCommandLineAction")),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("p",null,"Represents a sub-command that is part of the CommandLineParser command-line. Applications should create subclasses of ScopedCommandLineAction corresponding to each action that they want to expose."),(0,m.kt)("p",null,'The action name should be comprised of lower case words separated by hyphens or colons. The name should include an English verb (e.g. "deploy"). Use a hyphen to separate words (e.g. "upload-docs"). A group of related commands can be prefixed with a colon (e.g. "docs:generate", "docs:deploy", "docs:serve", etc).'),(0,m.kt)("p",null,'Scoped commands allow for different parameters to be specified for different provided scoping values. For example, the "scoped-action --scope A" command may allow for different scoped arguments to be specified than the "scoped-action --scope B" command.'),(0,m.kt)("p",null,'Scoped arguments are specified after the "--" pseudo-argument. For example, "scoped-action --scope A -- --scopedFoo --scopedBar".'))))),(0,m.kt)("h2",{id:"enumerations"},"Enumerations"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Enumeration"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineconstants"},"CommandLineConstants")),(0,m.kt)("td",{parentName:"tr",align:null},"String constants for command line processing.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterkind"},"CommandLineParameterKind")),(0,m.kt)("td",{parentName:"tr",align:null},"Identifies the kind of a CommandLineParameter.")))),(0,m.kt)("h2",{id:"interfaces"},"Interfaces"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Interface"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.ibasecommandlinedefinition"},"IBaseCommandLineDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with CommandLineParser, this interface represents a generic command-line parameter")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.ibasecommandlinedefinitionwithargument"},"IBaseCommandLineDefinitionWithArgument")),(0,m.kt)("td",{parentName:"tr",align:null},"The common base interface for parameter types that accept an argument.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineactionoptions"},"ICommandLineActionOptions")),(0,m.kt)("td",{parentName:"tr",align:null},"Options for the CommandLineAction constructor.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlinechoicedefinition"},"ICommandLineChoiceDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definechoiceparameter"},"CommandLineParameterProvider.defineChoiceParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter which is constrained to a list of possible options.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlinechoicelistdefinition"},"ICommandLineChoiceListDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definechoicelistparameter"},"CommandLineParameterProvider.defineChoiceListParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter which is constrained to a list of possible options. The parameter can be specified multiple times to build a list.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineflagdefinition"},"ICommandLineFlagDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineflagparameter"},"CommandLineParameterProvider.defineFlagParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter that is a boolean flag.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineintegerdefinition"},"ICommandLineIntegerDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineintegerparameter"},"CommandLineParameterProvider.defineIntegerParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter whose argument is an integer value.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineintegerlistdefinition"},"ICommandLineIntegerListDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.defineintegerlistparameter"},"CommandLineParameterProvider.defineIntegerListParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter whose argument is an integer value. The parameter can be specified multiple times to build a list.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineparseroptions"},"ICommandLineParserOptions")),(0,m.kt)("td",{parentName:"tr",align:null},"Options for the ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparser"},"CommandLineParser")," constructor.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlineremainderdefinition"},"ICommandLineRemainderDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definecommandlineremainder"},"CommandLineParameterProvider.defineCommandLineRemainder()"),(0,m.kt)(r.Fragment,null),", this interface defines a rule that captures any remaining command line arguments after the recognized portion.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlinestringdefinition"},"ICommandLineStringDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definestringparameter"},"CommandLineParameterProvider.defineStringParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter whose argument is a string value.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.icommandlinestringlistdefinition"},"ICommandLineStringListDefinition")),(0,m.kt)("td",{parentName:"tr",align:null},"For use with ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.definestringlistparameter"},"CommandLineParameterProvider.defineStringListParameter()"),(0,m.kt)(r.Fragment,null),", this interface defines a command line parameter whose argument is a single text string. The parameter can be specified multiple times to build a list.")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.iscopedlongnameparseresult"},"IScopedLongNameParseResult")),(0,m.kt)("td",{parentName:"tr",align:null},"The result containing the parsed paramter long name and scope. Returned when calling ",(0,m.kt)("a",{parentName:"td",href:"/pages/ts-command-line.commandlineparameterprovider.parsescopedlongname"},"CommandLineParameterProvider.parseScopedLongName()"),(0,m.kt)(r.Fragment,null),".")))))}c.isMDXComponent=!0}}]);