"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[7610],{45242:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(63929);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,b=d["".concat(p,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80855:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(50394),a=n(51614),l=(n(63929),n(45242)),o=["components"],i={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},p=void 0,s={unversionedId:"pages/node-core-library.iexecutablespawnsyncoptions",id:"pages/node-core-library.iexecutablespawnsyncoptions",title:"node-core-library.iexecutablespawnsyncoptions",description:"Home &gt; @rushstack/node-core-library &gt; IExecutableSpawnSyncOptions",source:"@site/docs/pages/node-core-library.iexecutablespawnsyncoptions.md",sourceDirName:"pages",slug:"/pages/node-core-library.iexecutablespawnsyncoptions",permalink:"/pages/node-core-library.iexecutablespawnsyncoptions",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},c={},u=[{value:"IExecutableSpawnSyncOptions interface",id:"iexecutablespawnsyncoptions-interface",level:2},{value:"Properties",id:"properties",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/node-core-library"},"@rushstack/node-core-library")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/node-core-library.iexecutablespawnsyncoptions"},"IExecutableSpawnSyncOptions")),(0,l.kt)("h2",{id:"iexecutablespawnsyncoptions-interface"},"IExecutableSpawnSyncOptions interface"),(0,l.kt)("p",null,"Options for ",(0,l.kt)("a",{parentName:"p",href:"/pages/node-core-library.executable.spawnsync"},"Executable.spawnSync()")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Signature:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IExecutableSpawnSyncOptions extends IExecutableResolveOptions\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Extends:")," ",(0,l.kt)("a",{parentName:"p",href:"/pages/node-core-library.iexecutableresolveoptions"},"IExecutableResolveOptions")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions.currentworkingdirectory"},"currentWorkingDirectory?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("i",null,"(Optional)")," The current working directory. If omitted, process.cwd() will be used."),(0,l.kt)("p",null,"(Inherited from ",(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions"},"IExecutableResolveOptions")," )"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions.environment"},"environment?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"NodeJS.ProcessEnv"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("i",null,"(Optional)")," The environment variables for the child process."),(0,l.kt)("p",null,"(Inherited from ",(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions"},"IExecutableResolveOptions")," )"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions.environmentmap"},"environmentMap?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.environmentmap"},"EnvironmentMap")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("i",null,"(Optional)")," The environment variables for the child process."),(0,l.kt)("p",null,"(Inherited from ",(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutableresolveoptions"},"IExecutableResolveOptions")," )"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutablespawnsyncoptions.input"},"input?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("i",null,"(Optional)")," The content to be passed to the child process's stdin."),(0,l.kt)("p",null,"NOTE: If specified, this content replaces any IExecutableSpawnSyncOptions.stdio","[","0","]"," mapping for stdin."))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutablespawnsyncoptions.maxbuffer"},"maxBuffer?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("i",null,"(Optional)")," The largest amount of bytes allowed on stdout or stderr for this synchronous operation. If exceeded, the child process will be terminated. The default is 200 ","*"," 1024.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutablespawnsyncoptions.stdio"},"stdio?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.executablestdiomapping"},"ExecutableStdioMapping")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("i",null,"(Optional)")," The stdio mappings for the child process."),(0,l.kt)("p",null,"NOTE: If IExecutableSpawnSyncOptions.input is provided, it will take precedence over the stdin mapping (stdio","[","0","]",")."))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/node-core-library.iexecutablespawnsyncoptions.timeoutms"},"timeoutMs?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("i",null,"(Optional)")," The maximum time the process is allowed to run before it will be terminated.")))))}m.isMDXComponent=!0}}]);