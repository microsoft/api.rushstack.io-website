"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[3495],{50158:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>c});var a=n(46393);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),u=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(p.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),s=u(n),k=r,c=s["".concat(p,".").concat(k)]||s[k]||m[k]||l;return n?a.createElement(c,i(i({ref:e},d),{},{components:n})):a.createElement(c,i({ref:e},d))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},90683:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(29122),r=(n(46393),n(50158));const l={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},i=void 0,o={unversionedId:"pages/rush-lib.environmentconfiguration",id:"pages/rush-lib.environmentconfiguration",title:"rush-lib.environmentconfiguration",description:"Home &gt; @microsoft/rush-lib &gt; EnvironmentConfiguration",source:"@site/docs/pages/rush-lib.environmentconfiguration.md",sourceDirName:"pages",slug:"/pages/rush-lib.environmentconfiguration",permalink:"/pages/rush-lib.environmentconfiguration",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},p={},u=[{value:"EnvironmentConfiguration class",id:"environmentconfiguration-class",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2}],d={toc:u},s="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/pages/rush-lib"},"@microsoft/rush-lib")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/pages/rush-lib.environmentconfiguration"},"EnvironmentConfiguration")),(0,r.kt)("h2",{id:"environmentconfiguration-class"},"EnvironmentConfiguration class"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,r.kt)("p",null,'Provides Rush-specific environment variable data. All Rush environment variables must start with "RUSH',"_",'". This class is designed to be used by RushConfiguration.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class EnvironmentConfiguration \n")),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("p",null,"Initialize will throw if any unknown parameters are present."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.absolutesymlinks"},"absoluteSymlinks")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)")),' If "1", create symlinks with absolute paths instead of relative paths. See')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.allowunsupportednodeversion"},"allowUnsupportedNodeVersion")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," If this environment variable is set to \"1\", the Node.js version check will print a warning instead of causing a hard error if the environment's Node.js version doesn't match the version specifier in ",(0,r.kt)("code",null,"rush.json"),'\'s "nodeSupportedVersionRange" property.'),(0,r.kt)("p",null,"See ."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.allowwarningsinsuccessfulbuild"},"allowWarningsInSuccessfulBuild")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Setting this environment variable overrides the value of ",(0,r.kt)("code",null,"allowWarningsInSuccessfulBuild")," in the ",(0,r.kt)("code",null,"command-line.json")," configuration file. Specify ",(0,r.kt)("code",null,"1")," to allow warnings in a successful build, or ",(0,r.kt)("code",null,"0")," to disallow them. (See the comments in the command-line.json file for more information).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.buildcachecredential"},"buildCacheCredential")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Provides a credential for reading from and writing to a remote build cache, if configured. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.buildcacheenabled"},"buildCacheEnabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," If set, enables or disables the cloud build cache feature. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.buildcachewriteallowed"},"buildCacheWriteAllowed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," If set, enables or disables writing to the cloud build cache. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.gitbinarypath"},"gitBinaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Allows the git binary path to be explicitly provided. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.pnpmstorepathoverride"},"pnpmStorePathOverride")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," An override for the PNPM store path, if ",(0,r.kt)("code",null,"pnpmStore")," configuration is set to 'path' See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.pnpmverifystoreintegrity"},"pnpmVerifyStoreIntegrity")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"boolean ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," If specified, enables or disables integrity verification of the pnpm store during install. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.rushglobalfolderoverride"},"rushGlobalFolderOverride")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Overrides the location of the ",(0,r.kt)("code",null,"~/.rush")," global folder where Rush stores temporary files. See")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.rushtempfolderoverride"},"rushTempFolderOverride")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," An override for the common/temp folder path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.tarbinarypath"},"tarBinaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("code",null,"static")),(0,r.kt)("p",null,(0,r.kt)("code",null,"readonly"))),(0,r.kt)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Allows the tar binary path to be explicitly provided. See")))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.parsebooleanenvironmentvariable"},"parseBooleanEnvironmentVariable(name, value)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.reset"},"reset()")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Resets EnvironmentConfiguration into an un-initialized state.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.environmentconfiguration.validate"},"validate(options)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"(BETA)"))," Reads and validates environment variables. If any are invalid, this function will throw.")))))}m.isMDXComponent=!0}}]);