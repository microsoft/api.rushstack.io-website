"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[27038],{50158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(46393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,k=u["".concat(p,".").concat(h)]||u[h]||f[h]||o;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},35223:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(29122),a=(n(46393),n(50158));const o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},l=void 0,i={unversionedId:"pages/heft.ihefttaskrunincrementalhookoptions",id:"pages/heft.ihefttaskrunincrementalhookoptions",title:"heft.ihefttaskrunincrementalhookoptions",description:"Home &gt; @rushstack/heft &gt; IHeftTaskRunIncrementalHookOptions",source:"@site/docs/pages/heft.ihefttaskrunincrementalhookoptions.md",sourceDirName:"pages",slug:"/pages/heft.ihefttaskrunincrementalhookoptions",permalink:"/pages/heft.ihefttaskrunincrementalhookoptions",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},p={},s=[{value:"IHeftTaskRunIncrementalHookOptions interface",id:"ihefttaskrunincrementalhookoptions-interface",level:2},{value:"Properties",id:"properties",level:2}],c={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/pages/heft"},"@rushstack/heft")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/pages/heft.ihefttaskrunincrementalhookoptions"},"IHeftTaskRunIncrementalHookOptions")),(0,a.kt)("h2",{id:"ihefttaskrunincrementalhookoptions-interface"},"IHeftTaskRunIncrementalHookOptions interface"),(0,a.kt)("p",null,"Options provided to the 'runIncremental' hook."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IHeftTaskRunIncrementalHookOptions extends IHeftTaskRunHookOptions \n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Extends:")," ",(0,a.kt)("a",{parentName:"p",href:"/pages/heft.ihefttaskrunhookoptions"},"IHeftTaskRunHookOptions")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/pages/heft.ihefttaskrunincrementalhookoptions.requestrun"},"requestRun")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"readonly")),(0,a.kt)("td",{parentName:"tr",align:null},"() =",">"," void"),(0,a.kt)("td",{parentName:"tr",align:null},"A callback that can be invoked to tell the Heft runtime to schedule an incremental run of this task. If a run is already pending, does nothing.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/pages/heft.ihefttaskrunincrementalhookoptions.watchglobasync"},"watchGlobAsync")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"readonly")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/pages/heft.watchglobfn"},"WatchGlobFn")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Reads the specified globs and returns the result, filtering out files that have not changed since the last execution. All file system calls while reading the glob are tracked and will be watched for changes."),(0,a.kt)("p",null,"If a change to the monitored files is detected, the task will be scheduled for re-execution."))))))}f.isMDXComponent=!0}}]);