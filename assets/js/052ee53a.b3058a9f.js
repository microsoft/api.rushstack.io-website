"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[12069],{50158:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>k});var a=n(46393);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),u=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=u(n),k=r,c=d["".concat(o,".").concat(k)]||d[k]||m[k]||l;return n?a.createElement(c,i(i({ref:e},p),{},{components:n})):a.createElement(c,i({ref:e},p))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88791:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(20216),r=(n(46393),n(50158));const l={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},i=void 0,s={unversionedId:"pages/rush-lib.rushconstants",id:"pages/rush-lib.rushconstants",title:"rush-lib.rushconstants",description:"Home &gt; @microsoft/rush-lib &gt; RushConstants",source:"@site/docs/pages/rush-lib.rushconstants.md",sourceDirName:"pages",slug:"/pages/rush-lib.rushconstants",permalink:"/pages/rush-lib.rushconstants",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},o={},u=[{value:"RushConstants class",id:"rushconstants-class",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Properties",id:"properties",level:2}],p={toc:u};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/pages/rush-lib"},"@microsoft/rush-lib")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/pages/rush-lib.rushconstants"},"RushConstants")),(0,r.kt)("h2",{id:"rushconstants-class"},"RushConstants class"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,r.kt)("p",null,"Constants used by the Rush tool."),(0,r.kt)("b",null,"Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class RushConstants\n")),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("p",null,"These are NOT part of the public API surface for rush-lib. The rationale is that we don't want people implementing custom parsers for the Rush config files; instead, they should rely on the official APIs from rush-lib."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.artifactoryfilename"},"artifactoryFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The artifactory.json configuration file name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.browserapprovedpackagesfilename"},"browserApprovedPackagesFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("browser-approved-packages.json") for an optional policy configuration file that stores a list of NPM packages that have been approved for usage by Rush projects. This is part of a pair of config files, one for projects that run in a web browser (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.buildcachefilename"},"buildCacheFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Build cache configuration file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.buildcacheversion"},"buildCacheVersion")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Build cache version number, incremented when the logic to create cache entries changes. Changing this ensures that cache entries generated by an old version will no longer register as a cache hit.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.buildcommandname"},"buildCommandName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the incremental build command.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.bulkcommandkind"},"bulkCommandKind")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"'bulk'"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The value of the "commandKind" property for a bulk command in command-line.json')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.changefilesfoldername"},"changeFilesFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("changes") where change files will be stored.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.commandlinefilename"},"commandLineFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Custom command line configuration file, which is used by rush for implementing custom command and options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.commonfoldername"},"commonFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("common") where Rush\'s common data will be stored.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.commonversionsfilename"},"commonVersionsFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("common-versions.json") for an optional configuration file that stores dependency version information that affects all projects in the repo. This configuration file should go in the "common/config/rush" folder.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.defaultmaxinstallattempts"},"defaultMaxInstallAttempts")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Number of installation attempts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.experimentsfilename"},"experimentsFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Experiments configuration file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.globalcommandkind"},"globalCommandKind")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"'global'"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The value of the "commandKind" property for a global command in command-line.json')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.hashdelimiter"},"hashDelimiter")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," When a hash generated that contains multiple input segments, this character may be used to separate them to avoid issues like crypto.createHash('sha1').update('a').update('bc').digest('hex') === crypto.createHash('sha1').update('ab').update('c').digest('hex')")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.nodemodulesfoldername"},"nodeModulesFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("node_modules") where NPM installs its packages.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.nonbrowserapprovedpackagesfilename"},"nonbrowserApprovedPackagesFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("nonbrowser-approved-packages.json") for an optional policy configuration file that stores a list of NPM packages that have been approved for usage by Rush projects. This is part of a pair of config files, one for projects that run in a web browser (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.npmshrinkwrapfilename"},"npmShrinkwrapFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("npm-shrinkwrap.json") used to store an installation plan for the NPM package manger.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.phasedcommandkind"},"phasedCommandKind")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"'phased'"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The value of the "commandKind" property for a phased command in command-line.json')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.phasenameprefix"},"phaseNamePrefix")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"'","_","phase:'"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The expected prefix for phase names in "common/config/rush/command-line.json"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.pinnedversionsfilename"},"pinnedVersionsFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("pinned-versions.json") for an old configuration file that that is no longer supported.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.pnpmfilev1filename"},"pnpmfileV1Filename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("pnpmfile.js") used to add custom configuration to PNPM (PNPM version 1.x and later).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.pnpmfilev6filename"},"pnpmfileV6Filename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename (".pnpmfile.cjs") used to add custom configuration to PNPM (PNPM version 6.x and later).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.pnpmv3shrinkwrapfilename"},"pnpmV3ShrinkwrapFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("pnpm-lock.yaml") used to store an installation plan for the PNPM package manger (PNPM version 3.x and later).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.projectrushfoldername"},"projectRushFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the per-project folder where project-specific Rush files are stored. For example, the package-deps files, which are used by commands to determine if a particular project needs to be rebuilt.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.projectshrinkwrapfilename"},"projectShrinkwrapFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the file to drop in project-folder/.rush/temp/ containing a listing of the project's direct and indirect dependencies. This is used to detect if a project's dependencies have changed since the last build.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rebuildcommandname"},"rebuildCommandName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the non-incremental build command.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.repostatefilename"},"repoStateFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("repo-state.json") for a file used by Rush to store the state of various features as they stand in the repo.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushlogsfoldername"},"rushLogsFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the project ",(0,r.kt)("code",null,"rush-logs")," folder.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushpackagename"},"rushPackageName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The name of the NPM package for the Rush tool (" @ microsoft/rush").')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushpluginmanifestfilename"},"rushPluginManifestFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Rush plugin manifest file name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushpluginsconfigfilename"},"rushPluginsConfigFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Rush plugins configuration file name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushprojectconfigfilename"},"rushProjectConfigFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Per-project configuration filename.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushrecyclerfoldername"},"rushRecyclerFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("rush-recycler") where Rush moves large folder trees before asynchronously deleting them.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushtempfoldername"},"rushTempFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("temp") under the common folder, or under the .rush folder in each project\'s directory where temporary files will be stored. Example: ',(0,r.kt)("code",null,"C:\\MyRepo\\common\\temp"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushtempnpmscope"},"rushTempNpmScope")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The NPM scope (" @ rush-temp") that is used for Rush\'s temporary projects.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushtempprojectsfoldername"},"rushTempProjectsFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("projects") where temporary projects will be stored. Example: ',(0,r.kt)("code",null,"C:\\MyRepo\\common\\temp\\projects"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushuserconfigurationfoldername"},"rushUserConfigurationFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," The name of the per-user Rush configuration data folder.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushvariantsfoldername"},"rushVariantsFolderName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The folder name ("variants") under which named variant configurations for alternate dependency sets may be found. Example: ',(0,r.kt)("code",null,"C:\\MyRepo\\common\\config\\rush\\variants"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.rushwebsiteurl"},"rushWebSiteUrl")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The URL ("',(0,r.kt)("a",{parentName:"td",href:"http://rushjs.io%22"},'http://rushjs.io"'),") for the Rush web site.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.updatecloudcredentialscommandname"},"updateCloudCredentialsCommandName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.versionpoliciesfilename"},"versionPoliciesFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushconstants.yarnshrinkwrapfilename"},"yarnShrinkwrapFilename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")),' The filename ("shrinkwrap.yaml") used to store state for pnpm')))))}m.isMDXComponent=!0}}]);