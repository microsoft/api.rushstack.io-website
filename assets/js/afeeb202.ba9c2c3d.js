"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[7229],{50158:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(46393);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return a?n.createElement(k,o(o({ref:t},m),{},{components:a})):n.createElement(k,o({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},60343:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=a(20216),r=a(46393),l=a(50158);const o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},i=void 0,s={unversionedId:"pages/rush-lib.rushlifecyclehooks",id:"pages/rush-lib.rushlifecyclehooks",title:"rush-lib.rushlifecyclehooks",description:"Home &gt; @microsoft/rush-lib &gt; RushLifecycleHooks",source:"@site/docs/pages/rush-lib.rushlifecyclehooks.md",sourceDirName:"pages",slug:"/pages/rush-lib.rushlifecyclehooks",permalink:"/pages/rush-lib.rushlifecyclehooks",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},p={},m=[{value:"RushLifecycleHooks class",id:"rushlifecyclehooks-class",level:2},{value:"Properties",id:"properties",level:2}],u={toc:m};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/rush-lib"},"@microsoft/rush-lib")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/rush-lib.rushlifecyclehooks"},"RushLifecycleHooks")),(0,l.kt)("h2",{id:"rushlifecyclehooks-class"},"RushLifecycleHooks class"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,l.kt)("p",null,"Hooks into the lifecycle of the Rush process invocation that plugins may tap into."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Signature:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class RushLifecycleHooks \n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.beforeinstall"},"beforeInstall")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.iglobalcommand"},"IGlobalCommand"),(0,l.kt)(r.Fragment,null),">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)")),' The hook to run between preparing the common/temp folder and invoking the package manager during "rush install" or "rush update".')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.flushtelemetry"},"flushTelemetry")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"AsyncParallelHook","<","[","ReadonlyArray","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.itelemetrydata"},"ITelemetryData"),(0,l.kt)(r.Fragment,null),">","]",">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)"))," A hook to allow plugins to hook custom logic to process telemetry data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.initialize"},"initialize")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.irushcommand"},"IRushCommand"),(0,l.kt)(r.Fragment,null),">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)"))," The hook to run before executing any Rush CLI Command.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.runanyglobalcustomcommand"},"runAnyGlobalCustomCommand")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.iglobalcommand"},"IGlobalCommand"),(0,l.kt)(r.Fragment,null),">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)"))," The hook to run before executing any global Rush CLI Command (defined in command-line.json).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.runanyphasedcommand"},"runAnyPhasedCommand")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.iphasedcommand"},"IPhasedCommand"),(0,l.kt)(r.Fragment,null),">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)")),' The hook to run before executing any phased Rush CLI Command (defined in command-line.json, or the default "build" or "rebuild").')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.runglobalcustomcommand"},"runGlobalCustomCommand")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"HookMap","<","AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.iglobalcommand"},"IGlobalCommand"),(0,l.kt)(r.Fragment,null),">",">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)"))," A hook map to allow plugins to hook specific named global commands (defined in command-line.json) before execution.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.rushlifecyclehooks.runphasedcommand"},"runPhasedCommand")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"HookMap","<","AsyncSeriesHook","<",(0,l.kt)("a",{parentName:"td",href:"/pages/rush-lib.iphasedcommand"},"IPhasedCommand"),(0,l.kt)(r.Fragment,null),">",">"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"(BETA)"))," A hook map to allow plugins to hook specific named phased commands (defined in command-line.json) before execution.")))))}c.isMDXComponent=!0}}]);