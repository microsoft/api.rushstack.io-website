"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[9230],{45242:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(63929);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},51077:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(50394),a=n(51614),o=(n(63929),n(45242)),l=["components"],i={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},p=void 0,s={unversionedId:"pages/api-extractor.consolemessageid",id:"pages/api-extractor.consolemessageid",title:"api-extractor.consolemessageid",description:"Home &gt; @microsoft/api-extractor &gt; ConsoleMessageId",source:"@site/docs/pages/api-extractor.consolemessageid.md",sourceDirName:"pages",slug:"/pages/api-extractor.consolemessageid",permalink:"/pages/api-extractor.consolemessageid",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},c={},u=[{value:"ConsoleMessageId enum",id:"consolemessageid-enum",level:2},{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Remarks",id:"remarks",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/pages/api-extractor"},"@microsoft/api-extractor")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/pages/api-extractor.consolemessageid"},"ConsoleMessageId")),(0,o.kt)("h2",{id:"consolemessageid-enum"},"ConsoleMessageId enum"),(0,o.kt)("p",null,"Unique identifiers for console messages reported by API Extractor."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare const enum ConsoleMessageId \n")),(0,o.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Member"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ApiReportCopied"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-api-report-copied",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"You have changed the public API signature for this project. Updating ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ApiReportCreated"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-api-report-created",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"The API report file was missing, so a new file was created. Please add this file to Git: ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ApiReportFolderMissing"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-api-report-folder-missing",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Unable to create the API report file. Please make sure the target folder exists: ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ApiReportNotCopied"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-api-report-not-copied",'"')),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,'"You have changed the public API signature for this project. Please copy the file ',"_","_","_"," to ","_","_","_",', or perform a local build (which does this automatically). See the Git repo documentation for more info."'),(0,o.kt)("p",null,"OR"),(0,o.kt)("p",null,'"The API report file is missing. Please copy the file ',"_","_","_"," to ","_","_","_",', or perform a local build (which does this automatically). See the Git repo documentation for more info."'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ApiReportUnchanged"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-api-report-unchanged",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"The API report is up to date: ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"CompilerVersionNotice"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-compiler-version-notice",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"The target project appears to use TypeScript ',"_","_","_",' which is newer than the bundled compiler engine; consider upgrading API Extractor."')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Diagnostics"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-diagnostics",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'Used for the information printed when the "--diagnostics" flag is enabled.')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"FoundTSDocMetadata"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-found-tsdoc-metadata",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Found metadata in ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Preamble"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-preamble",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Analysis will use the bundled TypeScript version ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"UsingCustomTSDocConfig"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-using-custom-tsdoc-config",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Using custom TSDoc config from ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"WritingDocModelFile"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-writing-doc-model-file",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Writing: ',"_","_","_",'"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"WritingDtsRollup"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,'"',"console-writing-dts-rollup",'"')),(0,o.kt)("td",{parentName:"tr",align:null},'"Writing package typings: ',"_","_","_",'"')))),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("p",null,"These strings are possible values for the ",(0,o.kt)("a",{parentName:"p",href:"/pages/api-extractor.extractormessage.messageid"},"ExtractorMessage.messageId")," property when the ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtractorMessage.category")," is ",(0,o.kt)("a",{parentName:"p",href:"/pages/api-extractor.extractormessagecategory"},"ExtractorMessageCategory.Console"),"."))}m.isMDXComponent=!0}}]);