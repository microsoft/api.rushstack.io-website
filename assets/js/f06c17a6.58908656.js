"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[12504],{45242:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return c}});var n=r(63929);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=u(r),c=a,k=d["".concat(s,".").concat(c)]||d[c]||p[c]||i;return r?n.createElement(k,l(l({ref:t},m),{},{components:r})):n.createElement(k,l({ref:t},m))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},34935:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var n=r(95464),a=r(20134),i=(r(63929),r(45242)),l=["components"],o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},s=void 0,u={unversionedId:"pages/terminal.stdiosummarizer",id:"pages/terminal.stdiosummarizer",title:"terminal.stdiosummarizer",description:"Home &gt; @rushstack/terminal &gt; StdioSummarizer",source:"@site/docs/pages/terminal.stdiosummarizer.md",sourceDirName:"pages",slug:"/pages/terminal.stdiosummarizer",permalink:"/pages/terminal.stdiosummarizer",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},m={},p=[{value:"StdioSummarizer class",id:"stdiosummarizer-class",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2}],d={toc:p};function c(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal"},"@rushstack/terminal")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal.stdiosummarizer"},"StdioSummarizer")),(0,i.kt)("h2",{id:"stdiosummarizer-class"},"StdioSummarizer class"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"Summarizes the results of a failed build task by returning a subset of ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," output not to exceed a specified maximum number of lines."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class StdioSummarizer extends TerminalWritable\n")),(0,i.kt)("b",null,"Extends:")," [TerminalWritable](/pages/terminal.terminalwritable)",(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"IMPORTANT: This transform assumes that its input was prepared by ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal.stderrlinetransform"},"StderrLineTransform")," , so that each ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal.iterminalchunk.text"},"ITerminalChunk.text")," item is a single line terminated by a ",(0,i.kt)("inlineCode",{parentName:"p"},'"\\n"')," character."),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal.istdiosummarizeroptions.leadinglines"},"IStdioSummarizerOptions.leadingLines")," and ",(0,i.kt)("a",{parentName:"p",href:"/pages/terminal.istdiosummarizeroptions.trailinglines"},"IStdioSummarizerOptions.trailingLines")," counts specify the maximum number of lines to be returned. Any additional lines will be omitted. For example, if ",(0,i.kt)("inlineCode",{parentName:"p"},"leadingLines")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"trailingLines")," were set to ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," , then the summary of 16 ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," lines might look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Line 1\nLine 2\nLine 3\n  ...10 lines omitted...\nLine 14\nLine 15\nLine 16\n")),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," output is completely empty, then the ",(0,i.kt)("inlineCode",{parentName:"p"},"stdout")," output will be summarized instead."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Constructor"),(0,i.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/pages/terminal.stdiosummarizer._constructor_"},"(constructor)(options)")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Constructs a new instance of the ",(0,i.kt)("code",null,"StdioSummarizer")," class")))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/pages/terminal.stdiosummarizer.getreport"},"getReport()")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns the summary report.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/pages/terminal.stdiosummarizer.onwritechunk"},"onWriteChunk(chunk)")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)")))))))}c.isMDXComponent=!0}}]);