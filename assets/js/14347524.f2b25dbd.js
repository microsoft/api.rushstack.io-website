"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[20916],{50158:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>d});var t=r(46393);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),g=s(r),d=o,m=g["".concat(l,".").concat(d)]||g[d]||u[d]||i;return r?t.createElement(m,a(a({ref:n},c),{},{components:r})):t.createElement(m,a({ref:n},c))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=r[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5404:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(20216),o=r(46393),i=r(50158);const a={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},p=void 0,l={unversionedId:"pages/rush-lib.pnpmoptionsconfiguration.globaloverrides",id:"pages/rush-lib.pnpmoptionsconfiguration.globaloverrides",title:"rush-lib.pnpmoptionsconfiguration.globaloverrides",description:"Home &gt; @microsoft/rush-lib &gt; PnpmOptionsConfiguration &gt; globalOverrides",source:"@site/docs/pages/rush-lib.pnpmoptionsconfiguration.globaloverrides.md",sourceDirName:"pages",slug:"/pages/rush-lib.pnpmoptionsconfiguration.globaloverrides",permalink:"/pages/rush-lib.pnpmoptionsconfiguration.globaloverrides",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},s={},c=[{value:"PnpmOptionsConfiguration.globalOverrides property",id:"pnpmoptionsconfigurationglobaloverrides-property",level:2}],u={toc:c};function g(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/pages/rush-lib"},"@microsoft/rush-lib")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/pages/rush-lib.pnpmoptionsconfiguration"},"PnpmOptionsConfiguration")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/pages/rush-lib.pnpmoptionsconfiguration.globaloverrides"},"globalOverrides")),(0,i.kt)("h2",{id:"pnpmoptionsconfigurationglobaloverrides-property"},"PnpmOptionsConfiguration.globalOverrides property"),(0,i.kt)("p",null,'The "globalOverrides" setting provides a simple mechanism for overriding version selections for all dependencies of all projects in the monorepo workspace. The settings are copied into the ',(0,i.kt)("inlineCode",{parentName:"p"},"pnpm.overrides")," field of the ",(0,i.kt)("inlineCode",{parentName:"p"},"common/temp/package.json")," file that is generated by Rush during installation."),(0,i.kt)("p",null,"Order of precedence: ",(0,i.kt)("inlineCode",{parentName:"p"},".pnpmfile.cjs")," has the highest precedence, followed by ",(0,i.kt)("inlineCode",{parentName:"p"},"unsupportedPackageJsonSettings"),(0,i.kt)(o.Fragment,null),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalPeerDependencyRules"),(0,i.kt)(o.Fragment,null),", ",(0,i.kt)("inlineCode",{parentName:"p"},"globalPackageExtensions"),(0,i.kt)(o.Fragment,null),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"globalOverrides")," has lowest precedence."),(0,i.kt)("p",null,"PNPM documentation: ",(0,i.kt)("a",{parentName:"p",href:"https://pnpm.io/package%5C_json%5C#pnpmoverrides"},"https://pnpm.io/package\\_json\\#pnpmoverrides")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"readonly globalOverrides: Record<string, string> | undefined;\n")))}g.isMDXComponent=!0}}]);