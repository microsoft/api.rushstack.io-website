"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[47663],{45242:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var a=n(63929);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),p=r,k=m["".concat(u,".").concat(p)]||m[p]||c[p]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68553:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=n(50394),r=n(51614),l=(n(63929),n(45242)),i=["components"],o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},u=void 0,s={unversionedId:"pages/rush-lib.environmentvariablenames",id:"pages/rush-lib.environmentvariablenames",title:"rush-lib.environmentvariablenames",description:"Home &gt; @microsoft/rush-lib &gt; EnvironmentVariableNames",source:"@site/docs/pages/rush-lib.environmentvariablenames.md",sourceDirName:"pages",slug:"/pages/rush-lib.environmentvariablenames",permalink:"/pages/rush-lib.environmentvariablenames",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},d={},c=[{value:"EnvironmentVariableNames enum",id:"environmentvariablenames-enum",level:2},{value:"Enumeration Members",id:"enumeration-members",level:2}],m={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/rush-lib"},"@microsoft/rush-lib")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/pages/rush-lib.environmentvariablenames"},"EnvironmentVariableNames")),(0,l.kt)("h2",{id:"environmentvariablenames-enum"},"EnvironmentVariableNames enum"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,l.kt)("p",null,"Names of environment variables used by Rush."),(0,l.kt)("b",null,"Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare enum EnvironmentVariableNames\n")),(0,l.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Member"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_ABSOLUTE_SYMLINKS"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_ABSOLUTE_SYMLINKS",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)")),' If this variable is set to "1", Rush will create symlinks with absolute paths instead of relative paths. This can be necessary when a repository is moved during a build or if parts of a repository are moved into a sandbox.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_ALLOW_UNSUPPORTED_NODEJS"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_ALLOW_UNSUPPORTED_NODEJS",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)")),' If this variable is set to "1", Rush will not fail the build when running a version of Node that does not match the criteria specified in the "nodeSupportedVersionRange" field from rush.json.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_ALLOW_WARNINGS_IN_SUCCESSFUL_BUILD"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_ALLOW_WARNINGS_IN_SUCCESSFUL_BUILD",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Setting this environment variable overrides the value of ",(0,l.kt)("code",null,"allowWarningsInSuccessfulBuild")," in the ",(0,l.kt)("code",null,"command-line.json")," configuration file. Specify ",(0,l.kt)("code",null,"1")," to allow warnings in a successful build, or ",(0,l.kt)("code",null,"0")," to disallow them. (See the comments in the command-line.json file for more information).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_BUILD_CACHE_CREDENTIAL"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_BUILD_CACHE_CREDENTIAL",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Provides a credential for a remote build cache, if configured. Setting this environment variable overrides whatever credential has been saved in the local cloud cache credentials using ",(0,l.kt)("code",null,"rush update-cloud-credentials"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_BUILD_CACHE_ENABLED"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_BUILD_CACHE_ENABLED",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Setting this environment variable overrides the value of ",(0,l.kt)("code",null,"buildCacheEnabled")," in the ",(0,l.kt)("code",null,"build-cache.json")," configuration file. Specify ",(0,l.kt)("code",null,"1")," to enable the build cache or ",(0,l.kt)("code",null,"0")," to disable it. If set to ",(0,l.kt)("code",null,"0"),", this is equivalent to passing the ",(0,l.kt)("code",null,"--disable-build-cache")," flag.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_BUILD_CACHE_WRITE_ALLOWED"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_BUILD_CACHE_WRITE_ALLOWED",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Setting this environment variable overrides the value of ",(0,l.kt)("code",null,"isCacheWriteAllowed")," in the ",(0,l.kt)("code",null,"build-cache.json")," configuration file. Specify ",(0,l.kt)("code",null,"1")," to allow cache write and ",(0,l.kt)("code",null,"0")," to disable it.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_DEPLOY_TARGET_FOLDER"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_DEPLOY_TARGET_FOLDER",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," This environment variable can be used to specify the ",(0,l.kt)("code",null,"--target-folder"),' parameter for the "rush deploy" command.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_GIT_BINARY_PATH"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_GIT_BINARY_PATH",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Allows the git binary path to be explicitly specified.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_GLOBAL_FOLDER"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_GLOBAL_FOLDER",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Overrides the location of the ",(0,l.kt)("code",null,"~/.rush")," global folder where Rush stores temporary files.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_INVOKED_FOLDER"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_INVOKED_FOLDER",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," When Rush executes shell scripts, it sometimes changes the working directory to be a project folder or the repository root folder. The original working directory (where the Rush command was invoked) is assigned to the the child process's ",(0,l.kt)("code",null,"RUSH_INVOKED_FOLDER")," environment variable, in case it is needed by the script.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_PARALLELISM"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_PARALLELISM",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Specifies the maximum number of concurrent processes to launch during a build. For more information, see the command-line help for the ",(0,l.kt)("code",null,"--parallelism"),' parameter for "rush build".')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_PNPM_STORE_PATH"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_PNPM_STORE_PATH",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," When using PNPM as the package manager, this variable can be used to configure the path that PNPM will use as the store directory. If a relative path is used, then the store path will be resolved relative to the process's current working directory. An absolute path is recommended.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_PREVIEW_VERSION"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_PREVIEW_VERSION",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)")),' This variable overrides the version of Rush that will be installed by the version selector. The default value is determined by the "rushVersion" field from rush.json.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_TAR_BINARY_PATH"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_TAR_BINARY_PATH",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," Allows the tar binary path to be explicitly specified.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_TEMP_FOLDER"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_TEMP_FOLDER",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)")),' This variable overrides the temporary folder used by Rush. The default value is "common/temp" under the repository root.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RUSH_VARIANT"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,'"',"RUSH_VARIANT",'"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("b",null,(0,l.kt)("i",null,"(BETA)"))," This variable selects a specific installation variant for Rush to use when installing and linking package dependencies. For more information, see the command-line help for the ",(0,l.kt)("code",null,"--variant")," parameter and this article: ",(0,l.kt)("a",{parentName:"td",href:"https://rushjs.io/pages/advanced/installation%5C_variants/"},"https://rushjs.io/pages/advanced/installation\\_variants/"))))))}p.isMDXComponent=!0}}]);