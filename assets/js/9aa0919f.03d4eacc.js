"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[39424],{50158:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var a=t(46393);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=l(t),u=r,f=s["".concat(p,".").concat(u)]||s[u]||c[u]||o;return t?a.createElement(f,m(m({ref:n},d),{},{components:t})):a.createElement(f,m({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,m=new Array(o);m[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[s]="string"==typeof e?e:r,m[1]=i;for(var l=2;l<o;l++)m[l]=t[l];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},19146:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>m,metadata:()=>p,toc:()=>d});var a=t(29122),r=t(46393),o=t(50158);const m={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},i=void 0,p={unversionedId:"pages/heft.iheftparsedcommandline.commandname",id:"pages/heft.iheftparsedcommandline.commandname",title:"heft.iheftparsedcommandline.commandname",description:"Home &gt; @rushstack/heft &gt; IHeftParsedCommandLine &gt; commandName",source:"@site/docs/pages/heft.iheftparsedcommandline.commandname.md",sourceDirName:"pages",slug:"/pages/heft.iheftparsedcommandline.commandname",permalink:"/pages/heft.iheftparsedcommandline.commandname",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},l={},d=[{value:"IHeftParsedCommandLine.commandName property",id:"iheftparsedcommandlinecommandname-property",level:2},{value:"Remarks",id:"remarks",level:2}],s={toc:d},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/pages/heft"},"@rushstack/heft")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/pages/heft.iheftparsedcommandline"},"IHeftParsedCommandLine")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/pages/heft.iheftparsedcommandline.commandname"},"commandName")),(0,o.kt)("h2",{id:"iheftparsedcommandlinecommandname-property"},"IHeftParsedCommandLine.commandName property"),(0,o.kt)("p",null,"Returns the subcommand passed on the Heft command line, before any aliases have been expanded. This can be useful when printing error messages that need to refer to the invoked command line."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"readonly commandName: string;\n")),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("p",null,"For example, if the invoked command was ",(0,o.kt)("inlineCode",{parentName:"p"},"heft test --verbose"),(0,o.kt)(r.Fragment,null),", then ",(0,o.kt)("inlineCode",{parentName:"p"},"commandName")," would be ",(0,o.kt)("inlineCode",{parentName:"p"},"test"),(0,o.kt)(r.Fragment,null),"."),(0,o.kt)("p",null,"Suppose the invoked command was ",(0,o.kt)("inlineCode",{parentName:"p"},"heft start")," which is an alias for ",(0,o.kt)("inlineCode",{parentName:"p"},"heft build-watch --serve"),(0,o.kt)(r.Fragment,null),". In this case, the ",(0,o.kt)("inlineCode",{parentName:"p"},"commandName")," would be ",(0,o.kt)("inlineCode",{parentName:"p"},"start"),(0,o.kt)(r.Fragment,null),". To get the expanded name ",(0,o.kt)("inlineCode",{parentName:"p"},"build-watch"),(0,o.kt)(r.Fragment,null),", use ",(0,o.kt)("a",{parentName:"p",href:"/pages/heft.iheftparsedcommandline.unaliasedcommandname"},"IHeftParsedCommandLine.unaliasedCommandName")," instead."),(0,o.kt)("p",null,"When invoking phases directly using ",(0,o.kt)("inlineCode",{parentName:"p"},"heft run"),(0,o.kt)(r.Fragment,null),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"commandName")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"run"),(0,o.kt)(r.Fragment,null),"."))}u.isMDXComponent=!0}}]);