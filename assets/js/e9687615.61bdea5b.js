"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[46164],{50158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(46393);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(g,l(l({ref:t},c),{},{components:r})):a.createElement(g,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},59476:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(20216),n=(r(46393),r(50158));const o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},l=void 0,i={unversionedId:"pages/api-extractor.extractormessage.handled",id:"pages/api-extractor.extractormessage.handled",title:"api-extractor.extractormessage.handled",description:"Home &gt; @microsoft/api-extractor &gt; ExtractorMessage &gt; handled",source:"@site/docs/pages/api-extractor.extractormessage.handled.md",sourceDirName:"pages",slug:"/pages/api-extractor.extractormessage.handled",permalink:"/pages/api-extractor.extractormessage.handled",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},s={},p=[{value:"ExtractorMessage.handled property",id:"extractormessagehandled-property",level:2},{value:"Remarks",id:"remarks",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/pages/api-extractor"},"@microsoft/api-extractor")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/pages/api-extractor.extractormessage"},"ExtractorMessage")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/pages/api-extractor.extractormessage.handled"},"handled")),(0,n.kt)("h2",{id:"extractormessagehandled-property"},"ExtractorMessage.handled property"),(0,n.kt)("p",null,"If the ",(0,n.kt)("a",{parentName:"p",href:"/pages/api-extractor.iextractorinvokeoptions.messagecallback"},"IExtractorInvokeOptions.messageCallback")," sets this property to true, it will prevent the message from being displayed by API Extractor."),(0,n.kt)("b",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"get handled(): boolean;\n\nset handled(value: boolean);\n")),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("p",null,"If the ",(0,n.kt)("inlineCode",{parentName:"p"},"messageCallback")," routes the message to a custom handler (e.g. a toolchain logger), it should assign ",(0,n.kt)("inlineCode",{parentName:"p"},"handled = true")," to prevent API Extractor from displaying it. Assigning ",(0,n.kt)("inlineCode",{parentName:"p"},"handled = true")," for all messages would effectively disable all console output from the ",(0,n.kt)("inlineCode",{parentName:"p"},"Extractor")," API."),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"handled")," is set to true, the message will still be included in the count of errors/warnings; to discard a message entirely, instead assign ",(0,n.kt)("inlineCode",{parentName:"p"},"logLevel = none")," ."))}d.isMDXComponent=!0}}]);