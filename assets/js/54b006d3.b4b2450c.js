"use strict";(self.webpackChunkapi_rushstack_io=self.webpackChunkapi_rushstack_io||[]).push([[53883],{50158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(46393);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?a.createElement(f,l(l({ref:t},c),{},{components:r})):a.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},67634:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(20216),n=(r(46393),r(50158));const i={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},l=void 0,o={unversionedId:"pages/terminal.textrewriter",id:"pages/terminal.textrewriter",title:"terminal.textrewriter",description:"Home &gt; @rushstack/terminal &gt; TextRewriter",source:"@site/docs/pages/terminal.textrewriter.md",sourceDirName:"pages",slug:"/pages/terminal.textrewriter",permalink:"/pages/terminal.textrewriter",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"docsSidebar"},s={},p=[{value:"TextRewriter class",id:"textrewriter-class",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Methods",id:"methods",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/pages/"},"Home")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal"},"@rushstack/terminal")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal.textrewriter"},"TextRewriter")),(0,n.kt)("h2",{id:"textrewriter-class"},"TextRewriter class"),(0,n.kt)("p",null,"The abstract base class for operations that can be applied by ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal.textrewritertransform"},"TextRewriterTransform")," ."),(0,n.kt)("b",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare abstract class TextRewriter\n")),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal.textrewritertransform"},"TextRewriterTransform")," applies one or more character rewriting operations to its chunk stream. Since these operations are applied separately to ",(0,n.kt)("inlineCode",{parentName:"p"},"stderr")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"stdout")," , the state is stored in an opaque ",(0,n.kt)("inlineCode",{parentName:"p"},"TextRewriterState")," object."),(0,n.kt)("p",null,"Conceptually, a ",(0,n.kt)("inlineCode",{parentName:"p"},"TextRewriter")," subclass is very similar to a regular expression, with the difference that ",(0,n.kt)("inlineCode",{parentName:"p"},"RegExp")," operates on a text string, whereas ",(0,n.kt)("inlineCode",{parentName:"p"},"TextRewriter")," operates on a stream of characters."),(0,n.kt)("p",null,"The two most common subclasses are ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal.normalizenewlinestextrewriter"},"NormalizeNewlinesTextRewriter")," and ",(0,n.kt)("a",{parentName:"p",href:"/pages/terminal.removecolorstextrewriter"},"RemoveColorsTextRewriter")," ."),(0,n.kt)("p",null,"A rewriting operation starts with ",(0,n.kt)("inlineCode",{parentName:"p"},"initialize()")," , followed by any number of ",(0,n.kt)("inlineCode",{parentName:"p"},"process()")," calls, and then finishes with ",(0,n.kt)("inlineCode",{parentName:"p"},"close()")," . For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const rewriter: NormalizeNewlinesTextRewriter = new NormalizeNewlinesTextRewriter(NewlineKind.Lf);\nconst state: TextRewriterState = rewriter.initialize();\nlet output: string = rewriter.process(state, 'line 1\\r');\noutput += rewriter.process(state, '\\nline 2\\r\\n');\noutput += rewriter.close(state);\n\n// The final \"output\" value is: \"line 1\\nline 2\\n\"\n")),(0,n.kt)("p",null,"After ",(0,n.kt)("inlineCode",{parentName:"p"},"close()")," has been called, the ",(0,n.kt)("inlineCode",{parentName:"p"},"TextRewriterState")," state should not be reused."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/pages/terminal.textrewriter.close"},"close(state)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Close the ",(0,n.kt)("code",null,"TextRewriterState")," object and return any buffered output.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/pages/terminal.textrewriter.initialize"},"initialize()")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Create a new ",(0,n.kt)("code",null,"TextRewriterState")," object that can be used to process a stream of characters.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/pages/terminal.textrewriter.process"},"process(state, input)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"Rewrite the next sequence of characters from the input stream, returning the modified output.")))))}u.isMDXComponent=!0}}]);